name: Deploy Docsify with Godot Demos to GitHub Pages

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  # Allow manual trigger
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
    - name: 🔄 Checkout repository
      uses: actions/checkout@v4
      with:
        # Important: This ensures we get the full history and submodules
        fetch-depth: 0
        submodules: recursive
        # This will pull LFS files during checkout
        lfs: true
    
    - name: 📦 Setup Git LFS
      run: |
        git lfs version
        git lfs pull
        echo "✅ Git LFS files pulled successfully"
    
    - name: 🔍 Verify Godot files
      run: |
        echo "📊 Checking Godot export files..."
        ls -lh gdEmbed/exports/web/ || echo "❌ Godot exports not found"
        
        # Check if WASM file exists and is not an LFS pointer
        if [ -f "gdEmbed/exports/web/index.wasm" ]; then
          file_size=$(stat -f%z "gdEmbed/exports/web/index.wasm" 2>/dev/null || stat -c%s "gdEmbed/exports/web/index.wasm")
          echo "📁 WASM file size: $file_size bytes"
          
          # Check if it's an LFS pointer (small text file)
          if [ "$file_size" -lt 1000 ]; then
            echo "⚠️  WASM file appears to be an LFS pointer, checking content:"
            head -n 3 "gdEmbed/exports/web/index.wasm"
          else
            echo "✅ WASM file appears to be the actual binary ($file_size bytes)"
          fi
        else
          echo "❌ WASM file not found"
        fi
        
        # List all files for debugging
        echo "📂 All export files:"
        find gdEmbed/exports/web/ -type f -exec ls -lh {} \;
    
    - name: 🛠️ Setup Node.js (for any build tools if needed)
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: package*.json
      # Only run if package.json exists
      if: hashFiles('package*.json') != ''
    
    - name: 📥 Install dependencies (if package.json exists)
      run: |
        if [ -f "package.json" ]; then
          npm ci
          echo "✅ Node.js dependencies installed"
        else
          echo "ℹ️  No package.json found, skipping npm install"
        fi
    
    - name: 🔧 Prepare deployment files
      run: |
        echo "🚀 Preparing files for deployment..."
        
        # Create deployment directory
        mkdir -p dist
        
        # Copy all necessary files to dist
        cp -r * dist/ 2>/dev/null || true
        
        # Ensure .nojekyll exists to prevent Jekyll processing
        touch dist/.nojekyll
        
        # Create _headers file for Netlify-style headers (GitHub Pages will ignore, but good practice)
        cat > dist/_headers << 'EOF'
        /*
          Cross-Origin-Embedder-Policy: require-corp
          Cross-Origin-Opener-Policy: same-origin
        
        /*.wasm
          Content-Type: application/wasm
          
        /*.pck
          Content-Type: application/octet-stream
          
        /*.js
          Content-Type: text/javascript
        EOF
        
        # Verify critical files exist in dist
        echo "📋 Verifying deployment files..."
        ls -la dist/
        
        echo "🎮 Checking Godot files in deployment:"
        ls -lh dist/gdEmbed/exports/web/ || echo "❌ Godot exports missing in dist"
        
        # Final verification of WASM file
        if [ -f "dist/gdEmbed/exports/web/index.wasm" ]; then
          wasm_size=$(stat -f%z "dist/gdEmbed/exports/web/index.wasm" 2>/dev/null || stat -c%s "dist/gdEmbed/exports/web/index.wasm")
          echo "✅ WASM file in dist: $wasm_size bytes"
        else
          echo "❌ WASM file missing in dist directory"
          exit 1
        fi
    
    - name: 🔍 Debug: Show file contents (for troubleshooting)
      run: |
        echo "🐛 Debug information:"
        echo "Current directory contents:"
        ls -la
        
        echo "Git LFS status:"
        git lfs ls-files
        
        echo "Git status:"
        git status --porcelain
        
        echo "Submodule status:"
        git submodule status
    
    - name: 📄 Setup GitHub Pages
      uses: actions/configure-pages@v4
    
    - name: 📤 Upload artifact to GitHub Pages
      uses: actions/upload-pages-artifact@v3
      with:
        path: 'dist'
    
    - name: 🚀 Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4
    
    - name: ✅ Deployment Summary
      run: |
        echo "🎉 Deployment completed successfully!"
        echo "🌐 Site URL: ${{ steps.deployment.outputs.page_url }}"
        echo "📊 Deployment details:"
        echo "  - Repository: ${{ github.repository }}"
        echo "  - Branch: ${{ github.ref_name }}"
        echo "  - Commit: ${{ github.sha }}"
        echo "  - Workflow: ${{ github.workflow }}"
